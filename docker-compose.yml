version: '3.5'

networks:
  internal:
    name: trustbridge-ethereum-channel-internal

services:
  localstack:
    image: localstack/localstack
    container_name: trustbridge-ethereum-channel-localstack
    environment:

      LAMBDA_EXECUTOR: docker-reuse
      EDGE_PORT: 10001
      PORT_WEB_UI: 9999
      HOSTNAME_EXTERNAL: trustbridge-ethereum-channel-localstack
      LOCALSTACK_HOSTNAME: trustbridge-ethereum-channel-localstack
      # SERVICES: sqs,s3,iam,lambda,apigateway
      SERVICES: sqs,s3
      DEFAULT_REGION: us-east-1

      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: access
      AWS_SECRET_ACCESS_KEY: secretaccess

    networks:
      - internal
    volumes:
      - '${dockerstagedir:-.}/localstack:/docker-entrypoint-initaws.d'
      - '/var/run/docker.sock:/var/run/docker.sock'

  ganache-cli:
    image: trufflesuite/ganache-cli
    container_name: trustbridge-ethereum-channel-ganache-cli
    networks:
      - internal
    command: >
        ganache-cli
        --hostname 0.0.0.0
        --port 8585
        --networkId 15
        --hardfork petersburg
        --blockTime 0
        --accounts 5
        --deterministic
        --mnemonic "myth like bonus scare over problem client lizard pioneer submit female collect"

  deployer-participant-ja:
    image: trustbridge-ethereum-channel/deployer
    container_name: trustbridge-ethereum-channel-deployer-participant-ja
    build:
      context: ${dockerstagedir:-.}/contract-deployer
      dockerfile: docker/Dockerfile
    volumes:
      - '${dockerstagedir:-.}/contract-deployer:/deployer'
      - '${dockerstagedir:-.}/contract:/tmp/contract'
    environment:
      # container or task
      CONTAINER_MODE: task
      SLEEP: 30

      CONTRACT_BUCKET_NAME: contract
      CONTRACT_KEY_PREFIX: channel-node-participant-ja

      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: access
      AWS_SECRET_ACCESS_KEY: secretaccess
      AWS_ENDPOINT_URL: http://trustbridge-ethereum-channel-localstack:10001

      TRUFFLE_NETWORK_ID: 15
      TRUFFLE_BLOCKCHAIN_ENDPOINT: ws://trustbridge-ethereum-channel-ganache-cli:8585
      # Wallet pk used to deploy a contract. Wallet will become an owner of the contract.
      TRUFFLE_WALLET_PK: "0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d"

      # these are contract specific migration environment variables, depends on contract migration scripts
      CHANNEL_NODE_DEPLOY_ARGS: '["JA"]'
      CHANNEL_NODE_DEPLOY_OPTS: '{}'
    networks:
      - internal

  deployer-participant-jb:
    image: trustbridge-ethereum-channel/deployer
    container_name: trustbridge-ethereum-channel-deployer-participant-jb
    build:
      context: ${dockerstagedir:-.}/contract-deployer
      dockerfile: docker/Dockerfile
    volumes:
      - '${dockerstagedir:-.}/contract-deployer:/deployer'
      - '${dockerstagedir:-.}/contract:/tmp/contract'
    environment:
      # container or task
      CONTAINER_MODE: task
      SLEEP: 30

      CONTRACT_BUCKET_NAME: contract
      CONTRACT_KEY_PREFIX: channel-node-participant-jb

      AWS_DEFAULT_REGION: us-east-1
      AWS_ACCESS_KEY_ID: access
      AWS_SECRET_ACCESS_KEY: secretaccess
      AWS_ENDPOINT_URL: http://trustbridge-ethereum-channel-localstack:10001

      TRUFFLE_NETWORK_ID: 15
      TRUFFLE_BLOCKCHAIN_ENDPOINT: ws://trustbridge-ethereum-channel-ganache-cli:8585
      # Wallet pk used to deploy a contract. Wallet will become an owner of the contract.
      TRUFFLE_WALLET_PK: "0x6cbed15c793ce57650b9877cf6fa156fbef513c4e6134f022a85b1ffdd59b2a1"

      # these are contract specific migration environment variables, depends on contract migration scripts
      CHANNEL_NODE_DEPLOY_ARGS: '["JB"]'
      CHANNEL_NODE_DEPLOY_OPTS: '{}'
    networks:
      - internal
  #
  # channel-api:
  #   image: trustbridge-ethereum-channel/channel-api
  #   container_name: trustbridge-ethereum-channel-channel-api
  #   build:
  #    context: '${dockerstagedir:-.}/channel-api'
  #    dockerfile: docker/Dockerfile
  #   volumes:
  #    - '/channel-api/node_modules'
  #    - '${dockerstagedir:-.}/channel-api:/channel-api'
  #   environment:
  #     PORT: 9090
  #     AWS_DEFAULT_REGION: us-east-1
  #     AWS_ACCESS_KEY_ID: access
  #     AWS_SECRET_ACCESS_KEY: secretaccess
  #     AWS_ENDPOINT_URL: http://tradetrust-localstack:10001
  #   networks:
  #     - internal
  #   ports:
  #     - '9090:9090'
  #
  # websub-hub:
  #   image: trustbridge-ethereum-channel/websub-hub
  #   container_name: trustbridge-ethereum-channel-websub-hub
  #   build:
  #     context: ${dockerstagedir:-.}/websub-hub
  #     dockerfile: docker/Dockerfile
  #   networks:
  #     - internal
  #   depends_on:
  #     - localstack
  #   volumes:
  #     - "${dockerstagedir:-.}/websub-hub:/websub-hub"
  #   environment:
  #     IGL_SUBSCRIPTIONS_REPO_USE_SSL: 'False'
  #     IGL_SUBSCRIPTIONS_REPO_REGION: us-east-1
  #     IGL_SUBSCRIPTIONS_REPO_HOST: trustbridge-ethereum-channel-localstack
  #     IGL_SUBSCRIPTIONS_REPO_PORT: 10001
  #     IGL_SUBSCRIPTIONS_REPO_ACCESS_KEY: access
  #     IGL_SUBSCRIPTIONS_REPO_SECRET_KEY: secretaccess
  #
  #     IGL_CHANNEL_REPO_HOST: trustbridge-ethereum-channel-localstack
  #     IGL_CHANNEL_REPO_PORT: 10001
  #     IGL_CHANNEL_REPO_REGION: us-east-1
  #     IGL_CHANNEL_REPO_ACCESS_KEY: access
  #     IGL_CHANNEL_REPO_SECRET_KEY: secretaccess
  #     IGL_CHANNEL_REPO_USE_SSL: 'False'
  #
  #     IGL_DELIVERY_OUTBOX_REPO_HOST: trustbridge-ethereum-channel-localstack
  #     IGL_DELIVERY_OUTBOX_REPO_PORT: 10001
  #     IGL_DELIVERY_OUTBOX_REPO_REGION: us-east-1
  #     IGL_DELIVERY_OUTBOX_REPO_ACCESS_KEY: access
  #     IGL_DELIVERY_OUTBOX_REPO_SECRET_KEY: secretaccess
  #     IGL_DELIVERY_OUTBOX_REPO_USE_SSL: 'False'
  #
  #     IGL_NOTIFICATIONS_REPO_HOST: trustbridge-ethereum-channel-localstack
  #     IGL_NOTIFICATIONS_REPO_PORT: 10001
  #     IGL_NOTIFICATIONS_REPO_REGION: us-east-1
  #     IGL_NOTIFICATIONS_REPO_ACCESS_KEY: access
  #     IGL_NOTIFICATIONS_REPO_SECRET_KEY: secretaccess
  #     IGL_NOTIFICATIONS_REPO_USE_SSL: 'False'
  #
  #     IGL_DELIVERY_OUTBOX_REPO_HOST: trustbridge-ethereum-channel-localstack
  #     IGL_DELIVERY_OUTBOX_REPO_PORT: 10001
  #     IGL_DELIVERY_OUTBOX_REPO_REGION: us-east-1
  #     IGL_DELIVERY_OUTBOX_REPO_ACCESS_KEY: access
  #     IGL_DELIVERY_OUTBOX_REPO_SECRET_KEY: secretaccess
  #     IGL_DELIVERY_OUTBOX_REPO_USE_SSL: 'False'
  #
  #     # these must be disabled in production envrionment
  #     IGL_ALLOW_UNSAFE_REPO_CLEAR: 'True'
  #     IGL_ALLOW_UNSAFE_REPO_IS_EMPTY: 'True'
  #     TESTING: 'True'
  #     DEBUG: 'True'
  #     # name of the main logger
  #     SERVICE_NAME: websub-hub
  #     # flask server name used for websub hub url creation, required
  #     SERVER_NAME: 0.0.0.0:8080
  #     TOPIC_BASE_URL: http://channel-api:9090/topic/
  #     TOPIC_HUB_PATH: /topic/
  #     HUB_URL: http://channel-api:9090
  #     # Used to filter messages, NewMessagesObserver should not notify about messages of other receivers, but only about ones that addressed to it.
  #     ENDPOINT: AU
  #
  #     # SENTRY_DSN enables sentry logging integration
  #     # ICL_LOG_FORMATTER_JSON enables json logging integration
